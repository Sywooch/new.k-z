<?php

namespace common\models;

use common\helpers\TranslitHelper;
use Yii;

/**
 * This is the model class for table "menuItems".
 *
 * @property string $id
 * @property string $menuID
 * @property string $name
 * @property string $link
 *
 * @property Menu $menu
 * @property int linkType
 */
class MenuItem extends \yii\db\ActiveRecord
{
    const LINK_TYPE_LINK = 1;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'menuItems';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['menuID', 'linkType'], 'integer'],
            [['name', 'link'], 'required'],
            [['name'], 'string', 'max' => 255],
            [['link'], 'string', 'max' => 128],
            [['menuID', 'link'], 'unique', 'targetAttribute' => ['menuID', 'link'], 'message' => 'The combination of Menu ID and Link has already been taken.'],
            [['menuID'], 'exist', 'skipOnError' => true, 'targetClass' => Menu::className(), 'targetAttribute' => ['menuID' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'        =>  'ID',
            'menuID'    =>  'Меню',
            'name'      =>  'Название',
            'link'      =>  'Ссылка',
            'linkType'  =>  'Тип ссылки'
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMenu()
    {
        return $this->hasOne(Menu::className(), ['id' => 'menuID']);
    }

    public function beforeSave($insert)
    {
        if(empty($this->link)){
            $this->link = TranslitHelper::to($this->name);
        }

        if(empty($this->linkType)){
            $this->linkType = self::LINK_TYPE_LINK;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
